module Sender {
  type Tuple = [bv8]bv1;
  type Bit = bv1;

  var buffer: Tuple;
  var m: bv1;
  var b: Bit;

  next {
    if ((buffer[0bv8] == m) && (b != buffer[1bv8])) {
    }

  }
}
module Receiver {
  type Tuple = [bv8]bv1;
  type Bit = bv1;

  var buffer: Tuple;
  var m: bv1;
  var b: Bit;

  next {
    if ((buffer[0bv8] == m) && (b != buffer[1bv8])) {
    }

  }
}
module Channel {
  type Tuple = [bv8]bv1;
  type Bit = bv1;

  var buffer: boolean;

  next {
    if (buffer) {
      buffer' = false;
    }

  }
}
