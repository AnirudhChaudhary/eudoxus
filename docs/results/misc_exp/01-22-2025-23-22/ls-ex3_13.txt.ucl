module TrafficLightStateMachine {
  type State = enum { GREEN, PENDING, RED, YELLOW };

  var current_state: State;
  var count: integer;

  input pedestrian: boolean;

  output sigG: boolean;
  output sigY: boolean;
  output sigR: boolean;

  init {
    current_state = RED;
    count = 0;
    sigR = true;
    sigG = false;
    sigY = false;

  }
  next {
    if (current_state == RED) {
      if (count >= 60) {
        current_state' = GREEN;
        sigG' = true;
        sigR' = false;
        count' = 0;
      } else {
        count' = (count + 1);
      }
    } else {
      if (current_state == GREEN) {
        if (pedestrian) {
          if (count < 60) {
            current_state' = PENDING;
          } else {
            current_state' = YELLOW;
            sigY' = true;
            sigG' = false;
            count' = 0;
          }
        } else {
          count' = (count + 1);
        }
      } else {
        if (current_state == PENDING) {
          if (count >= 60) {
            current_state' = YELLOW;
            sigY' = true;
            sigG' = false;
            count' = 0;
          } else {
            count' = (count + 1);
          }
        } else {
          if (current_state == YELLOW) {
            if (count >= 5) {
              current_state' = RED;
              sigR' = true;
              sigY' = false;
              count' = 0;
            } else {
              count' = (count + 1);
            }
          }
        }
      }
    }

  }
}
