module StackModule {
  var n: integer;
  var pop_condition: boolean;
  var push_condition: boolean;
  var StackTop: integer;

  init {
    StackTop = 0;

  }
  procedure step()
    modifies pop_condition;
    modifies push_condition;
    modifies StackTop;
  {
    pop_condition = (StackTop > 0);
    push_condition = (StackTop < n);
    if (pop_condition) {
      StackTop = (StackTop - 1);
    }
    if (push_condition) {
      StackTop = (StackTop + 1);
    }
  }

  next {
    call step();
  }
  invariant spec: ((StackTop >= 0) && (StackTop <= n));

}
