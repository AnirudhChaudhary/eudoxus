module TrafficLights {
  type Bit = boolean;
  type Bits = integer;
  type State = Bits;
  type Sensor = Bit;

  var main_state: State;
  var secondary_state: State;
  var timer: integer;

  input vehicle_detected: Sensor;

  output mG: Bit;
  output mY: Bit;
  output mR: Bit;
  output sG: Bit;
  output sY: Bit;
  output sR: Bit;

  init {
    main_state = 0;
    secondary_state = 0;
    timer = 0;

  }
  procedure step()
    modifies sR;
    modifies main_state;
    modifies timer;
    modifies sY;
    modifies secondary_state;
    modifies mG;
    modifies mY;
    modifies mR;
    modifies sG;
  {
    if (timer == 720) {
      timer = 0;
      if (vehicle_detected) {
        main_state = 1;
      } else {
        main_state = 2;
      }
    } else {
      if ((timer == 660) && !vehicle_detected) {
        main_state = 1;
      } else {
        if (timer == 0) {
          main_state = 0;
        }
      }
    }
    if (secondary_state == 0) {
      if (timer == 660) {
        secondary_state = 2;
      } else {
        if (vehicle_detected) {
          secondary_state = 1;
        }
      }
    } else {
      if (timer == 715) {
        secondary_state = 1;
      } else {
        if (timer == 0) {
          secondary_state = 0;
        }
      }
    }
    timer = (timer + 1);
    mG = (main_state == 2);
    mY = (main_state == 1);
    mR = (main_state == 0);
    sG = (secondary_state == 2);
    sY = (secondary_state == 1);
    sR = (secondary_state == 0);
  }

  next {
    call step();
  }
}
