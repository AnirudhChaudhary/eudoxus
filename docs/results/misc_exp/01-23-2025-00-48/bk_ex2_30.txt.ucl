module Module {
  var controller_state: integer;
  var gate_state: enum { down, far, in, near, up };
  var train_state: enum { down, far, in, near, up };

  next {
    if ((train_state == far) && (controller_state == 0)) {
      controller_state' = 1;
    } else {
      if ((train_state == near) && (controller_state == 1)) {
        controller_state' = 2;
        gate_state' = down;
      } else {
        if ((train_state == in) && (controller_state == 2)) {
          controller_state' = 3;
        } else {
          if (controller_state == 3) {
            gate_state' = up;
            controller_state' = 0;
          }
        }
      }
    }

  }
  invariant spec: (if (train_state == in) then (gate_state == down) else true);

}
