module Module {
  type Bit = integer;

  var warn: boolean;
  var nowarn: boolean;
  var time: integer;

  input ignition: Bit;
  input buckled: Bit;

  init {
    warn = false;
    nowarn = false;
    time = 0;

  }
  next {
    if (warn) {
      if (nowarn) {
        warn' = false;
      } else {
        if (time == 30) {
          warn' = false;
        } else {
          time' = (time + 1);
        }
      }
    }

  }
  invariant spec: ((warn == ((ignition == 1) && (buckled == 0))) || ((time < 30) && warn));

}
