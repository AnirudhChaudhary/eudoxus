module MutualExclusionModule {
  var s: bv1;
  var y0: bv1;
  var y1: bv1;

  init {
    s = 1bv1;
    y0 = 0bv1;
    y1 = 0bv1;

  }
  procedure step()
    modifies y1;
    modifies s;
    modifies y0;
  {
    if ((y1 == 0bv1) && (s == 0bv1)) {
      y1 = 1bv1;
      s = 1bv1;
    }
    if ((y1 == 1bv1) && (s == 1bv1)) {
      y1 = 0bv1;
      s = 0bv1;
    }
    if (s == 0bv1) {
      y0 = 0bv1;
    } else {
      y0 = 1bv1;
    }
  }

  next {
    call step();
  }
  invariant spec: ((y1 == 0bv1) || (y1 == 1bv1));

}
