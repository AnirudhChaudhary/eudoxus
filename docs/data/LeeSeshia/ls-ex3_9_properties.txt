Model a state machine describing a traffic light at a pedestrian crosswalk. This is a time triggered machine that assumes it will react once per second. It starts in the red state and counts 60 seconds with the help of the variable count. It then transitions to green, where it will remain until the pure input pedestrian is present. That input is generated by a pedestrian pushing a button to request a walk light. When pedestrian is present, the machine transitions to yellow if it has been in state green for at least 60 seconds. Otherwise, it transitions to pending, where it stays for the remainder of the 60 second interval. This ensures that once the light goes green, it stays green for at least 60 seconds. At the end of 60 seconds, it will transition to yellow, where it will remain for 5 seconds before transitioning back to red.

The outputs produced by this machine are sigG to turn on the green light, sigY to change the light to yellow, and sigR to change the light to red.

Use the variable names sigG, sigY, sigR, pedestrian and count.
Otherwise, it transitions to pending, where it stays for the remainder of the 60 second interval. This ensures that once the light goes green, it stays green for at least 60 seconds. At the end of 60 seconds, it will transition to yellow, where it will remain for 5 seconds before transitioning back to red.
Properties:
- If the state machine is the red state, it isn't in green state or yellow state
- If the state machine is the yellow state, it isn't in red state or green state
- If the state machine is the green state, it isn't in red state or yellow state

- If the state is red, then the count is between 0 and 60
- If the state is green, then there is no pedestrian input present
- If green and count > 60 and ped_present then transition yellow
- If green and count < 60, then no transition yellow
- If green and count < 60 and ped_input_present, then transition pending
- If state is yellow, then count < 5
- If state is yellow and count = 5, next state is red


