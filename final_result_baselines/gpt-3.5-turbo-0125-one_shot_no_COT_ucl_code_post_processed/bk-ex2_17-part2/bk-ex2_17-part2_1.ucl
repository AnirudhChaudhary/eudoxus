
module traffic_light
{
  type state_t = enum { RED, GREEN };

  var state1 : state_t;
  var state2 : state_t;

  init {
    state1 = RED;
    state2 = RED;
  }

  next {
    if (state1 == RED && state2 == RED) {
      nondet {
        state1' = GREEN;
        state2' = RED;
      } else {
        state1' = RED;
        state2' = GREEN;
      }
    } else if (state1 == GREEN && state2 == RED) {
      state1' = RED;
      state2' = GREEN;
    } else if (state1 == RED && state2 == GREEN) {
      state1' = GREEN;
      state2' = RED;
    } else {
      state1' = RED;
      state2' = RED;
    }
  }
}



This code models a parallel composition of two traffic lights, each with two states (RED and GREEN). The initial state sets both traffic lights to RED, and then the next state logic determines the possible transitions between the states based on the current states of the two traffic lights.
