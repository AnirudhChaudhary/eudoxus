uclid
module traffic_light
{
    type state_t = enum { RED, GREEN };

    var state1 : state_t;
    var state2 : state_t;

    init {
        state1 = RED;
        state2 = RED;
    }

    next {
        if (state1 == RED && state2 == RED) {
            // Non-deterministic choice of which light turns green first
            if (nondet()) {
                state1' = GREEN;
            } else {
                state2' = GREEN;
            }
        } else if (state1 == RED) {
            state1' = GREEN;
        } else if (state2 == RED) {
            state2' = GREEN;
        } else if (state1 == GREEN) {
            state1' = RED;
        } else if (state2 == GREEN) {
            state2' = RED;
        }
    }
}


This code models a parallel composition of two traffic lights with two states each (RED and GREEN). The initial states of both traffic lights are set to RED. The next state transition logic allows for non-deterministic choice of which traffic light turns green first when both lights are red. Once a light turns green, it will eventually turn back to red in the subsequent transitions.
