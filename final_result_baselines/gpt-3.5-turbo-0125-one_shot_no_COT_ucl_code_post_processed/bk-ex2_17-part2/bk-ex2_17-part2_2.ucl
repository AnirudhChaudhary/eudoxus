uclid
module traffic_light
{
  type state_t = enum { RED, GREEN };

  var state1 : state_t;
  var state2 : state_t;

  init {
    state1 = RED;
    state2 = RED;
  }

  next {
    if (state1 == RED && state2 == RED) {
      // Non-deterministic choice for which light turns green first
      if (nondet()) {
        state1' = GREEN;
      } else {
        state2' = GREEN;
      }
    } else if (state1 == GREEN) {
      state1' = RED;
    } else if (state2 == GREEN) {
      state2' = RED;
    }
  }
}



This code models the parallel composition of two traffic lights, each with two states (RED and GREEN). The initial state of both traffic lights is set to RED. The `next` block handles the transitions between states, ensuring that only one light can be green at a time and that they can switch independently of each other. The non-deterministic choice in the initial state allows for flexibility in which light turns green first.
