uclid
module concurrent_program
{
  var x : int;

  process Inc
  {
    while true do
    {
      if x < 200 then
        x := x + 1;
      fi
    }
  }

  process Dec
  {
    while true do
    {
      if x > 0 then
        x := x - 1;
      fi
    }
  }

  process Reset
  {
    while true do
    {
      if x = 200 then
        x := 0;
      fi
    }
  }

  invariant x_between_0_and_200 : 0 <= x && x <= 200;
}


In this model, the three processes Inc, Dec, and Reset operate concurrently on the shared variable x. The invariant `x_between_0_and_200` checks if the value of x is always between 0 and 200, inclusive.
