c
module main {
  var x : int;

  process Inc {
    while true {
      if x < 200 {
        x := x + 1;
      }
    }
  }

  process Dec {
    while true {
      if x > 0 {
        x := x - 1;
      }
    }
  }

  process Reset {
    while true {
      if x == 200 {
        x := 0;
      }
    }
  }

  invariant x_between_0_and_200 {
    x >= 0 && x <= 200;
  }

  init {
    x := 100; // Initial value of x can be arbitrary
  }

  control {
    unroll(10);
    check;
    print_results;
  }
}


In this model, the processes Inc, Dec, and Reset continuously execute their respective actions based on the conditions provided. The invariant `x_between_0_and_200` ensures that the value of x remains between 0 and 200 (inclusive) at all times.

The `init` block initializes the shared variable x with an arbitrary initial value (in this case, 100), and the `control` block unrolls the processes for 10 steps, checks the invariant, and prints the results.
