
module parallel_program
{
  var x : int;

  procedure action_A()
    modifies x;
  {
    x := 2 * x;
  }

  procedure action_B()
    modifies x;
  {
    x := x + 1;
  }

  init {
    x := 3;
  }

  next {
    either {
      call action_A();
    } or {
      call action_B();
    }
  }
}


In this model, we have a shared variable `x` of type integer. We define two procedures `action_A` and `action_B` that modify the shared variable `x` based on the given instructions. The `init` block initializes the shared variable `x` to 3. The `next` block models the parallel execution of `action_A` and `action_B` using the `either` construct in Uclid5.
