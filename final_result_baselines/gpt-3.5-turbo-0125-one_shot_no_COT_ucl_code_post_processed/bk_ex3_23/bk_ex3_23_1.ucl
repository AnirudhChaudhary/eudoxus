java
module traffic_light {
    type phase_t = enum { RED, GREEN, YELLOW };

    var red, green, yellow : phase_t;

    init {
        red = RED;
        green = GREEN;
        yellow = YELLOW;
    }

    next {
        if (yellow == YELLOW) {
            red' = RED;
            green' = GREEN;
            yellow' = YELLOW;
        } else if (red == RED) {
            // Ensure every red phase is immediately preceded by a yellow phase
            assert yellow == YELLOW;
            red' = RED;
            green' = GREEN;
            yellow' = YELLOW;
        } else if (green == GREEN) {
            red' = RED;
            green' = GREEN;
            yellow' = YELLOW;
        }
    }
}


In this model, the traffic light has three phases: red, green, and yellow. The `next` block ensures that the transitions between phases follow the specified safety property that every red phase is immediately preceded by a yellow phase. The safety property is enforced through an assertion within the `next` block.
