c
module TrafficLight {
    type phase_t = enum { RED, GREEN, YELLOW };

    var current_phase : phase_t;
    var previous_phase : phase_t;

    init {
        current_phase = GREEN;
        previous_phase = YELLOW;
    }

    next {
        previous_phase' = current_phase;
        if (current_phase == RED) {
            assert previous_phase == YELLOW;
        }
        if (current_phase == RED) {
            current_phase' = GREEN;
        } else {
            current_phase' = current_phase + 1;
        }
    }
}


In this code, the `TrafficLight` module models the traffic light with the three phases and maintains the current and previous phases. The `next` block updates the phases based on the current phase and enforces the safety property that every red phase is immediately preceded by a yellow phase by asserting it.
