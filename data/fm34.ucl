// Purpose: tests that bitvectors can overflow
// Description: A module with a single bitvector variable x. The variable x increases by 1 in each transition. There is an invariant saying that x is never 0 and we are attempting a proof by induction.
// Expectation: UCLID5 should be able to violate the invariant by overflowing x in the inductive step. The base case should be violated by setting x to 0.
// Validation: The counterexample should show that x is 0 in the base case and 2^32 in the inductive step.

module main {
    var x: bv32;

    next {
        x' = x + 1bv32;
    }

    invariant never_zero: x != 0bv32;

    control {
        v = induction;
        check;
        v.print_cex();
    }
}